// –ë–∏–¥ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 —á–µ–ª–æ–≤–µ–∫, —Ç.–∫. –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

const fs = require('fs')
const Discord = require('discord.js')
const mongoose = require('mongoose')
const { DiscordInteractions } = require('slash-commands')
const {
  verifyKeyMiddleware,
  InteractionType,
  InteractionResponseType,
} = require('discord-interactions')
const express = require('express')
const app = express()
const client = new Discord.Client()
client.commands = new Discord.Collection()
const sendBid = require('./commands/TWindow_sendBid')
const editMoneyTable = require('./functions/editMoneyTable')
const User = require('./models/User')
const Squadlist = require('./models/Squadlist')
require('dotenv').config()
const appID = process.env.CLIENT_ID
const PREFIX = process.env.PREFIX
const guildID = process.env.GUILD_ID

// const interaction = new DiscordInteractions({
//   applicationId: appID,
//   authToken: process.env.BOT_TOKEN,
//   publicKey: process.env.PUBLIC_KEY,
// })

const commandFiles = fs
  .readdirSync('./commands')
  .filter((file) => file.endsWith('.js'))

for (const file of commandFiles) {
  const command = require(`./commands/${file}`)
  client.commands.set(command.name, command)
}

client.once('ready', async () => {
  console.log('Bot is ready!')
  client.user.setActivity('Football Manager 2022')

  await mongoose
    .connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      useCreateIndex: true,
    })
    .then(() => console.log('MongoDB connected.'))
    .catch((e) => console.log(`Error: ${e}`))
})

client.on('guildMemberAdd', (member) => {
  member.roles.add(process.env.GUEST_ROLE)
  let generalChannel = client.channels.cache.get(process.env.GUEST_CHANNEL) // Replace with known channel ID
  generalChannel.send('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, <@' + member.user.id + '>!')
  const nmsg = member.guild.channels.cache.get(process.env.GUEST_CHANNEL)
  nmsg.send({
    embed: {
      color: 16777215,
      title: '–ü—Ä–∞–≤–∏–ª–∞ ‚áì',
      description:
        '<#502769170400673792>\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—å, —Ç–æ –Ω–∞–º –≤–∞–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ –≤–∞—Å –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ. <@750349474815017015> –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–°, –ø—Ä–æ—á—Ç–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.',
      thumbnail: {
        url: 'https://media.giphy.com/media/d2r5afIHy34mWTM8r4/giphy.gif',
      },
      footer: {
        icon_url: client.user.avatarURL(),
        text: `–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ üôÇ ${member.guild.memberCount} ü§ù`,
      },
    },
  })
  let memberMsg = [
    '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –ª—é–±–∏—Ç–µ–ª–µ–π Football Manager! –ö–æ—Å—Ç—è–∫ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ç–µ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ FMFan.',
    '–ú—ã –¥–∞–≤–Ω–æ –∏ —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –Ω–æ –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –∏ –Ω–æ–≤—ã–º –ª–∏—Ü–∞–º. –ü–æ—ç—Ç–æ–º—É, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—å, —Ç–æ –Ω–∞–º –≤–∞–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ –≤–∞—Å –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ –º–Ω–µ.',
    '\n**–í–ê–ñ–ù–û!** –û—Ç—Å—ã–ª–∞—Ç—å –Ω–∞–¥–æ –≤—Å—é –∞–Ω–∫–µ—Ç—É **–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º** –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –Ω–∏–∂–µ –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π **"!–∞–Ω–∫–µ—Ç–∞"** –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ—á–∫–µ. –ï—Å–ª–∏ –∞–Ω–∫–µ—Ç–∞ –¥–æ—à–ª–∞ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, —Ç–æ —è —Å—Ä–∞–∑—É –æ—Ç–ø–∏—à—É.',
    '–í—Å–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ **+** –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é.\n',
    '>>> !–∞–Ω–∫–µ—Ç–∞',
    '**+** –ù–∏–∫ –Ω–∞ FMFan: __*(–µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –Ω–µ—Ç, —Ç–æ –ø—Ä–∏–¥–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç)*__',
    '**+** –ò–º—è: __*(–≤–∞—à–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è)*__',
    '**+** –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: __*(—á–∏—Å–ª–æ, –º–µ—Å—è—Ü –∏ –≥–æ–¥)*__',
    '**+** –ì–æ—Ä–æ–¥: __*(–≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ)*__',
    '**+** –û–ø—ã—Ç –∏–≥—Ä—ã –≤ Football Manager: __*(–≤ –∫–∞–∫–∏–µ —á–∞—Å—Ç–∏ FM –∏–≥—Ä–∞–ª–∏)*__',
    'VK: __*(—Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –∂–µ–ª–∞–Ω–∏—é)*__',
    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ: __*(–∑–∞ –∫–∞–∫–æ–π –∫–ª—É–± –±–æ–ª–µ–µ—Ç–µ, —á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω–æ–µ)*__',
  ]
  member.send(memberMsg)
})

// client.on('guildMemberRemove', (member) => {
//   let generalChannel = client.channels.cache.get(process.env.GUEST_CHANNEL); // Replace with known channel ID
//   generalChannel.send("–ü—Ä–æ—â–∞–µ–º—Å—è —Å <@" + member.user.id + ">!");
//  });

client.on('messageReactionAdd', async (reaction, user) => {
  let message = reaction.message,
    emoji = reaction.emoji

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –º–µ–∂–¥—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
  if (
    emoji.name == '‚úÖ' &&
    message.channel.id === process.env.TRANSFERS_CHANNEL &&
    emoji.reaction.count === 1
  ) {
    let reBrackets = /\[(.*?)\]/g
    let changeInfo = []
    let found = ''
    while ((found = reBrackets.exec(message.content))) {
      changeInfo.push(found[1])
    }

    if (changeInfo.length === 6) {
      // –ü—Ä–∞–≤–∫–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –∏ –ø–æ–∫—É–ø–∫–∏
      await User.findOneAndUpdate(
        // –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        { club: changeInfo[4] },
        { $inc: { money: Number(changeInfo[3]) - Number(changeInfo[0]) } },
        { useFindAndModify: false }
      )
      await User.findOneAndUpdate(
        { club: changeInfo[1] },
        { $inc: { money: Number(changeInfo[0]) - Number(changeInfo[3]) } },
        { useFindAndModify: false }
      )
      // –º–µ–Ω—è–µ–º —É –∏–≥—Ä–æ–∫–∞ –∫–ª—É–±—ã –º–µ—Å—Ç–∞–º–∏
      await Squadlist.findOneAndUpdate(
        { uid: changeInfo[2] },
        { club: changeInfo[1], mins: 0 },
        { useFindAndModify: false }
      )
      await Squadlist.findOneAndUpdate(
        { uid: changeInfo[5] },
        { club: changeInfo[4], mins: 0 },
        { useFindAndModify: false }
      )
    } else if (changeInfo.length === 4) {
      // –ü—Ä–∞–≤–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
      await User.findOneAndUpdate(
        // –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–æ–¥–∞—é—â–µ–≥–æ
        { club: changeInfo[0] },
        { $inc: { money: Number(changeInfo[1]), players: -1 } },
        { useFindAndModify: false }
      )
      await User.findOneAndUpdate(
        // –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–∞—é—â–µ–≥–æ
        { club: changeInfo[2] },
        { $inc: { money: -Number(changeInfo[1]), players: 1 } },
        { useFindAndModify: false }
      )
      // –º–µ–Ω—è–µ–º –∫–ª—É–± —É –∏–≥—Ä–æ–∫–∞
      await Squadlist.findOneAndUpdate(
        { uid: changeInfo[3] },
        { club: changeInfo[2], status: 'new' },
        { useFindAndModify: false }
      )
    }
    editMoneyTable(message) // —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±—é–¥–∂–µ—Ç –≤ –¥–∏—Å–∫–æ—Ä–¥-–∫–∞–Ω–∞–ª–µ
  }

  if (message.channel.type !== 'dm') return
  let bidmsg = message.content.split('\n')
  if (bidmsg.length !== 9) return // –î–∞–ª—å–Ω–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏—è –±—ã–ª–∞ –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞
  // –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞ !search player
  if (emoji.name == '‚û°Ô∏è') {
    sendBid.execute(message, [
      bidmsg[2].slice(6, -2),
      bidmsg[3].slice(11, -5),
      user.id,
      user.username,
    ])
  } else if (emoji.name == '‚ÜóÔ∏è') {
    sendBid.execute(message, [
      bidmsg[2].slice(6, -2),
      Number(Math.round(Number(bidmsg[3].slice(11, -5)) * 1.05 + 'e2') + 'e-2'),
      user.id,
      user.username,
    ])
  } else if (emoji.name == '‚¨ÜÔ∏è') {
    sendBid.execute(message, [
      bidmsg[2].slice(6, -2),
      Number(Math.round(Number(bidmsg[3].slice(11, -5)) * 1.1 + 'e2') + 'e-2'),
      user.id,
      user.username,
    ])
  } else if (emoji.name == '‚è´') {
    sendBid.execute(message, [
      bidmsg[2].slice(6, -2),
      Number(Math.round(Number(bidmsg[3].slice(11, -5)) * 1.2 + 'e2') + 'e-2'),
      user.id,
      user.username,
    ])
  } else if (emoji.name == 'üÜô') {
    sendBid.execute(message, [
      bidmsg[2].slice(6, -2),
      Number(Math.round(Number(bidmsg[3].slice(11, -5)) * 1.4 + 'e2') + 'e-2'),
      user.id,
      user.username,
    ])
  }
})

client.on('message', (message) => {
  if (!message.content.startsWith(PREFIX) || message.author.bot) return

  const args = message.content
    .slice(PREFIX.length)
    .trim()
    .split(/\n+| +/)
  const commandName = args.shift().toLowerCase()

  if (!client.commands.has(commandName)) return
  const command = client.commands.get(commandName)

  try {
    command.execute(message, args)
  } catch (error) {
    console.error(error)
    message.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–∞–Ω–¥—ã!')
  }
})

//client.ws.on('INTERACTION_CREATE', async (interaction) => {
//console.log(interaction)
// app.post(`/applications/${appID}/commands`, verifyKeyMiddleware('e55015414053bff3bf102c38c06244cb8869a7eb67a62fc836ab12ecbf6167ac'), (req, res) => {
//   const message = req.body;

//   console.log(message.type)
//  console.log(InteractionType.COMMAND)
//   if (message.type === InteractionType.COMMAND) {
//     console.log('WORK')
//     res.send({
//       type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,
//       data: {
//         content: clubs,
//         embeds: [clubsEmbed]
//       },
//     });
//   }
// });
// console.log(interaction)
// console.log(interaction.data.options[0].value)
// if (interaction.data.name === 'clubs') {
//   client.api.interactions(interaction.id, interaction.token).callback.post({
//     data: {
//       type: 4,
//       data: {
//         content: '',
//         embeds: [clubsEmbed],
//       },
//     },
//   })
// }
//})

client.login(process.env.BOT_TOKEN)
