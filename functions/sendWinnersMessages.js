const sendWinnersMessages = (bidWinnersList, message) => {
  let bidCount = 0
  if (bidWinnersList === undefined) return

  let interval = setInterval(async function () {

    if (bidWinnersList[bidCount].hasOwnProperty('losers')) { // –µ—Å–ª–∏ –µ—Å—Ç—å –ª—É–∑–µ—Ä–∞
      let losers = ''
      for (los of bidWinnersList[bidCount].losers) {
        losers += `-‚úò- *${los.club} (¬£${los.price} –º–ª–Ω)* `
      }
      descr = `‚úÖ –ö–ª—É–± **${bidWinnersList[bidCount].club}** –∑–∞–≤–µ—Ä—à–∏–ª —Å–¥–µ–ª–∫—É –ø–æ –∏–≥—Ä–æ–∫—É **${bidWinnersList[bidCount].player}**.\nüí∑ –°—É–º–º–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞: ¬£**${bidWinnersList[bidCount].price}**–º–ª–Ω\n ${losers}`
      message.client.channels.cache.get(process.env.BID_CONFIRM_CHANNEL).send({
        embed: {
          color: 3553599,
          description: descr,
        },
      })
    } else { // –µ—Å–ª–∏ –Ω–µ—Ç –ª—É–∑–µ—Ä–æ–≤
      descr = `‚úÖ –ö–ª—É–± **${bidWinnersList[bidCount].club}** –∑–∞–≤–µ—Ä—à–∏–ª —Å–¥–µ–ª–∫—É –ø–æ –∏–≥—Ä–æ–∫—É **${bidWinnersList[bidCount].player}**.\nüí∑ –°—É–º–º–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞: ¬£**${bidWinnersList[bidCount].price}**–º–ª–Ω`,
      message.client.channels.cache.get(process.env.BID_CONFIRM_CHANNEL).send({
        embed: {
          color: 3553599,
          description: descr,
        }
      })
    }
    bidCount += 1
  }, 2000)

  setTimeout(async function () {
    clearInterval(interval)
  }, 2000 * (bidWinnersList.length + 1))
}

module.exports = sendWinnersMessages
